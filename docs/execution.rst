.. include:: .special.rst

.. _Execution_Page:

=========
Execution
=========

Running EllipTrack
******************

EllipTrack is controlled by *mainfile.m*. 
This file is implemented in a linear modular structure with seven steps.

1.  **Reading Parameters**. Read parameter values from *parameters.m*.
2.  **Segmentation**. Segment cells from the images.
3.  **Jitter Correction**. Compute jitters between frames. Correct ellipse positions.
4.  **Predicting Events**. Compute event probabilities.
5.  **Generate Tracks**. Construct cell tracks. Post-processing.
6.  **Visualize Tracking Performance**. Generating "vistrack" movie.
7.  **Signal Extraction**. Extract signals from the regions of interest.

Step 4-6 form Track Linking. 
Each step except for Step 1 and 6 generates an output MAT file in the folder specified by :reditalic:`output_path` in *segmentation_para* (refer to :ref:`outputs_mainfile_Page` of :ref:`Outputs_Page`).
To execute EllipTrack, sequentially run all the steps in *mainfile.m*.

.. admonition:: Remark

   Each step in *mainfile.m* only depends on the output MAT files of the previous steps.
   It is possible to re-run a step without repeating the calculations.

   For example, the necessary information for re-running Step 4 can be gathered by executing Step 1 and loading the outputs of Step 2 and 3.
   

Generating Heatmaps
*******************

Heatmaps (similar to Figure 1I) are generated by the standalone Matlab function *plot_full_lineages.m*.
This function creates a series of images where each image contains the heatmaps of eight lineage trees colored by their signal values.
Cell Track IDs are displayed next to the births of cell tracks.

The inputs to the function are

*  *all_signals*. Single cell traces. Output of Signal Extraction.
*  *start_frame* and *end_frame*. Frames to consider. Only lineage trees spanning over the entire range will be plotted.
*  *signal_nominator* and *signal_denominator*. Signals to plot. Must match one of the fields in *all_signals* (refer to :ref:`outputs_mainfile_signal_Page` of :ref:`Outputs_Page`).

   If *signal_denominator* is empty, the signal specified by *signal_nominator* will be plotted.
   Otherwise, the ratio ``signal_nominator/signal_denominator`` will be plotted.

*  *signal_range*. Lower and upper bounds of the colorbar.

.. admonition:: Example
   :class: hint
   
   A movie is captured in Site 1 of Well B10 and contains 482 frames.
   The signal of interest is computed by ``CDK2_cytoring_mean/CDK2_nuc_mean``.
   The range of colorbar is between 0 and 2.
   To visualize all lineage trees spanning over the entire movie, execute the following command 

   .. code-block:: matlab

      plot_full_lineages(all_signals{2,10,1}, 1, 482, 'CDK2_cytoring_mean', 'CDK2_nuc_mean', [0, 2]);

   Meanwhile, if the signal of interest is *nuc_area* and the range of colorbar is between 0 and 100, execute the following command

   .. code-block:: matlab

      plot_full_lineages(all_signals{2,10,1}, 1, 482, 'nuc_area', '', [0, 100]);

